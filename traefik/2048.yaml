apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-2048
spec:
  selector:
    matchLabels:
      app: app-2048
  replicas: 1
  template:
    metadata:
      labels:
        app: app-2048
    spec:
      containers:
      - image: alexwhen/docker-2048
        imagePullPolicy: Always
        name: app-2048
        ports:
        - containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: service-2048
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  type: NodePort
  selector:
    app: app-2048

# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: nginx-2048-ingress
#   annotations:
#     traefik.ingress.kubernetes.io/router.entrypoints: web
#     #traefik.ingress.kubernetes.io/router.middlewares: traefik-basic-auth@kubernetescrd
#     cert-manager.io/issuer: "2048-tls"
# spec:
#   tls:
#     - hosts:
#         - 2048.sidneiweber.com.br
#       secretName: 2048-tls
#   rules:
#   - host: 2048.sidneiweber.com.br
#     http:
#       paths:
#         - path: /
#           pathType: Prefix
#           backend:
#             service:
#               name: service-2048
#               port:
#                number: 80
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: 2048-ingress
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  tls:
    #secretName: le-tls # Informe o secret com certificado aqui.
    #certResolver: name
  entryPoints:
    - web
    - websecure
  routes:
    - match: HostRegexp(`2048.sidneiweber.com.br`)
      kind: Rule
      services:
        - name: service-2048
          port: 80
